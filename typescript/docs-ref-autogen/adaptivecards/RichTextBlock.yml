### YamlMime:TSType
name: RichTextBlock
uid: adaptivecards.RichTextBlock
package: adaptivecards
summary: ''
fullName: RichTextBlock
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: RichTextBlock()
    uid: adaptivecards.RichTextBlock.constructor
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: new RichTextBlock()
properties:
  - name: forElementId
    uid: adaptivecards.RichTextBlock.forElementId
    package: adaptivecards
    summary: ''
    fullName: forElementId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'forElementId?: string'
      return:
        description: ''
        type: string
  - name: hasVisibleSeparator
    uid: adaptivecards.RichTextBlock.hasVisibleSeparator
    package: adaptivecards
    summary: ''
    fullName: hasVisibleSeparator
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: boolean hasVisibleSeparator
      return:
        description: ''
        type: boolean
  - name: hostConfig
    uid: adaptivecards.RichTextBlock.hostConfig
    package: adaptivecards
    summary: ''
    fullName: hostConfig
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: HostConfig hostConfig
      return:
        description: ''
        type: <xref uid="adaptivecards.HostConfig" />
  - name: index
    uid: adaptivecards.RichTextBlock.index
    package: adaptivecards
    summary: ''
    fullName: index
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: number index
      return:
        description: ''
        type: number
  - name: isInline
    uid: adaptivecards.RichTextBlock.isInline
    package: adaptivecards
    summary: ''
    fullName: isInline
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: boolean isInline
      return:
        description: ''
        type: boolean
  - name: isInteractive
    uid: adaptivecards.RichTextBlock.isInteractive
    package: adaptivecards
    summary: ''
    fullName: isInteractive
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: boolean isInteractive
      return:
        description: ''
        type: boolean
  - name: isStandalone
    uid: adaptivecards.RichTextBlock.isStandalone
    package: adaptivecards
    summary: ''
    fullName: isStandalone
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: boolean isStandalone
      return:
        description: ''
        type: boolean
  - name: isVisible
    uid: adaptivecards.RichTextBlock.isVisible
    package: adaptivecards
    summary: ''
    fullName: isVisible
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: boolean isVisible
      return:
        description: ''
        type: boolean
  - name: lang
    uid: adaptivecards.RichTextBlock.lang
    package: adaptivecards
    summary: ''
    fullName: lang
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string | undefined lang
      return:
        description: ''
        type: string | undefined
  - name: parent
    uid: adaptivecards.RichTextBlock.parent
    package: adaptivecards
    summary: ''
    fullName: parent
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: CardElement | undefined parent
      return:
        description: ''
        type: <xref uid="adaptivecards.CardElement" /> | undefined
  - name: renderedElement
    uid: adaptivecards.RichTextBlock.renderedElement
    package: adaptivecards
    summary: ''
    fullName: renderedElement
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: HTMLElement | undefined renderedElement
      return:
        description: ''
        type: HTMLElement | undefined
  - name: requires
    uid: adaptivecards.RichTextBlock.requires
    package: adaptivecards
    summary: ''
    fullName: requires
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: HostCapabilities requires
      return:
        description: ''
        type: <xref uid="adaptivecards.HostCapabilities" />
  - name: separatorElement
    uid: adaptivecards.RichTextBlock.separatorElement
    package: adaptivecards
    summary: ''
    fullName: separatorElement
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: HTMLElement | undefined separatorElement
      return:
        description: ''
        type: HTMLElement | undefined
inheritedProperties:
  - name: customCssSelector
    uid: adaptivecards.RichTextBlock.customCssSelector
    package: adaptivecards
    summary: ''
    fullName: customCssSelector
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'customCssSelector?: string'
      return:
        description: ''
        type: string
  - name: defaultMaxVersion
    uid: adaptivecards.RichTextBlock.defaultMaxVersion
    package: adaptivecards
    summary: ''
    fullName: defaultMaxVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static defaultMaxVersion: Version'
      return:
        description: ''
        type: <xref uid="adaptivecards.Version" />
  - name: height
    uid: adaptivecards.RichTextBlock.height
    package: adaptivecards
    summary: ''
    fullName: height
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'height: CardElementHeight'
      return:
        description: ''
        type: <xref uid="adaptivecards.CardElementHeight" />
  - name: heightProperty
    uid: adaptivecards.RichTextBlock.heightProperty
    package: adaptivecards
    summary: ''
    fullName: heightProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static heightProperty: ValueSetProperty'
      return:
        description: ''
        type: <xref uid="adaptivecards.ValueSetProperty" />
  - name: horizontalAlignment
    uid: adaptivecards.RichTextBlock.horizontalAlignment
    package: adaptivecards
    summary: ''
    fullName: horizontalAlignment
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'horizontalAlignment?: HorizontalAlignment'
      return:
        description: ''
        type: <xref uid="adaptivecards.HorizontalAlignment" />
  - name: horizontalAlignmentProperty
    uid: adaptivecards.RichTextBlock.horizontalAlignmentProperty
    package: adaptivecards
    summary: ''
    fullName: horizontalAlignmentProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static horizontalAlignmentProperty: EnumProperty<HorizontalAlignment>'
      return:
        description: ''
        type: >-
          <xref uid="adaptivecards.EnumProperty" />&lt;<xref
          uid="adaptivecards.HorizontalAlignment" />&gt;
  - name: id
    uid: adaptivecards.RichTextBlock.id
    package: adaptivecards
    summary: ''
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id?: string'
      return:
        description: ''
        type: string
  - name: idProperty
    uid: adaptivecards.RichTextBlock.idProperty
    package: adaptivecards
    summary: ''
    fullName: idProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static idProperty: StringProperty'
      return:
        description: ''
        type: <xref uid="adaptivecards.StringProperty" />
  - name: isVisibleProperty
    uid: adaptivecards.RichTextBlock.isVisibleProperty
    package: adaptivecards
    summary: ''
    fullName: isVisibleProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static isVisibleProperty: BoolProperty'
      return:
        description: ''
        type: <xref uid="adaptivecards.BoolProperty" />
  - name: langProperty
    uid: adaptivecards.RichTextBlock.langProperty
    package: adaptivecards
    summary: ''
    fullName: langProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static langProperty: StringProperty'
      return:
        description: ''
        type: <xref uid="adaptivecards.StringProperty" />
  - name: maxVersion
    uid: adaptivecards.RichTextBlock.maxVersion
    package: adaptivecards
    summary: ''
    fullName: maxVersion
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxVersion: Version'
      return:
        description: ''
        type: <xref uid="adaptivecards.Version" />
  - name: onPreProcessPropertyValue
    uid: adaptivecards.RichTextBlock.onPreProcessPropertyValue
    package: adaptivecards
    summary: ''
    fullName: onPreProcessPropertyValue
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onPreProcessPropertyValue?: (sender: CardObject, property:
        PropertyDefinition, value: any) => any
      return:
        description: ''
        type: >-
          (sender: CardObject, property: PropertyDefinition, value: any) =&gt;
          any
  - name: onRegisterCustomProperties
    uid: adaptivecards.RichTextBlock.onRegisterCustomProperties
    package: adaptivecards
    summary: ''
    fullName: onRegisterCustomProperties
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static onRegisterCustomProperties?: (sender: SerializableObject, schema:
        SerializableObjectSchema) => void
      return:
        description: ''
        type: >-
          (sender: SerializableObject, schema: SerializableObjectSchema) =&gt;
          void
  - name: requiresProperty
    uid: adaptivecards.RichTextBlock.requiresProperty
    package: adaptivecards
    summary: ''
    fullName: requiresProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static requiresProperty: SerializableObjectProperty'
      return:
        description: ''
        type: <xref uid="adaptivecards.SerializableObjectProperty" />
  - name: separator
    uid: adaptivecards.RichTextBlock.separator
    package: adaptivecards
    summary: ''
    fullName: separator
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'separator: boolean'
      return:
        description: ''
        type: boolean
  - name: separatorProperty
    uid: adaptivecards.RichTextBlock.separatorProperty
    package: adaptivecards
    summary: ''
    fullName: separatorProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static separatorProperty: BoolProperty'
      return:
        description: ''
        type: <xref uid="adaptivecards.BoolProperty" />
  - name: spacing
    uid: adaptivecards.RichTextBlock.spacing
    package: adaptivecards
    summary: ''
    fullName: spacing
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'spacing: Spacing'
      return:
        description: ''
        type: <xref uid="adaptivecards.Spacing" />
  - name: spacingProperty
    uid: adaptivecards.RichTextBlock.spacingProperty
    package: adaptivecards
    summary: ''
    fullName: spacingProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static spacingProperty: EnumProperty<Spacing>'
      return:
        description: ''
        type: >-
          <xref uid="adaptivecards.EnumProperty" />&lt;<xref
          uid="adaptivecards.Spacing" />&gt;
  - name: typeNameProperty
    uid: adaptivecards.RichTextBlock.typeNameProperty
    package: adaptivecards
    summary: ''
    fullName: typeNameProperty
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static typeNameProperty: StringProperty'
      return:
        description: ''
        type: <xref uid="adaptivecards.StringProperty" />
inheritedMethods:
  - name: findDOMNodeOwner(Node)
    uid: adaptivecards.RichTextBlock.findDOMNodeOwner
    package: adaptivecards
    summary: |-
      Recursively searches this CardObject and any children to find the
      innermost CardObject that owns the given DOM Node.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function findDOMNodeOwner(node: Node): CardObject | undefined'
      parameters:
        - id: node
          type: Node
          description: |
            The DOM Node to look for.
      return:
        description: 'The owner of the given DOM Node, or `undefined` if no owner was found.'
        type: <xref uid="adaptivecards.CardObject" /> | undefined
  - name: getActionAt(number)
    uid: adaptivecards.RichTextBlock.getActionAt
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getActionAt(index: number): Action | undefined'
      parameters:
        - id: index
          type: number
          description: ''
      return:
        description: ''
        type: <xref uid="adaptivecards.Action" /> | undefined
  - name: getActionById(string)
    uid: adaptivecards.RichTextBlock.getActionById
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getActionById(id: string): Action | undefined'
      parameters:
        - id: id
          type: string
          description: ''
      return:
        description: ''
        type: <xref uid="adaptivecards.Action" /> | undefined
  - name: getActionCount()
    uid: adaptivecards.RichTextBlock.getActionCount
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getActionCount(): number'
      return:
        description: ''
        type: number
  - name: getAllInputs(boolean)
    uid: adaptivecards.RichTextBlock.getAllInputs
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getAllInputs(processActions?: boolean): Input[]'
      parameters:
        - id: processActions
          type: boolean
          description: ''
      return:
        description: ''
        type: '<xref uid="adaptivecards.Input" />[]'
  - name: getCustomProperty(string)
    uid: adaptivecards.RichTextBlock.getCustomProperty
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getCustomProperty(name: string): any'
      parameters:
        - id: name
          type: string
          description: ''
      return:
        description: ''
        type: any
  - name: getEffectiveHorizontalAlignment()
    uid: adaptivecards.RichTextBlock.getEffectiveHorizontalAlignment
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getEffectiveHorizontalAlignment(): HorizontalAlignment'
      return:
        description: ''
        type: <xref uid="adaptivecards.HorizontalAlignment" />
  - name: getEffectivePadding()
    uid: adaptivecards.RichTextBlock.getEffectivePadding
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getEffectivePadding(): PaddingDefinition'
      return:
        description: ''
        type: <xref uid="adaptivecards.PaddingDefinition" />
  - name: getEffectiveStyle()
    uid: adaptivecards.RichTextBlock.getEffectiveStyle
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getEffectiveStyle(): string'
      return:
        description: ''
        type: string
  - name: getEffectiveStyleDefinition()
    uid: adaptivecards.RichTextBlock.getEffectiveStyleDefinition
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getEffectiveStyleDefinition(): ContainerStyleDefinition'
      return:
        description: ''
        type: <xref uid="adaptivecards.ContainerStyleDefinition" />
  - name: getEffectiveTextStyleDefinition()
    uid: adaptivecards.RichTextBlock.getEffectiveTextStyleDefinition
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getEffectiveTextStyleDefinition(): TextStyleDefinition'
      return:
        description: ''
        type: <xref uid="adaptivecards.TextStyleDefinition" />
  - name: getElementById(string)
    uid: adaptivecards.RichTextBlock.getElementById
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getElementById(id: string): CardElement | undefined'
      parameters:
        - id: id
          type: string
          description: ''
      return:
        description: ''
        type: <xref uid="adaptivecards.CardElement" /> | undefined
  - name: getForbiddenActionTypes()
    uid: adaptivecards.RichTextBlock.getForbiddenActionTypes
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getForbiddenActionTypes(): ActionType[]'
      return:
        description: ''
        type: '<xref uid="adaptivecards.ActionType" />[]'
  - name: >-
      getImmediateSurroundingPadding(PaddingDefinition, boolean, boolean,
      boolean, boolean)
    uid: adaptivecards.RichTextBlock.getImmediateSurroundingPadding
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getImmediateSurroundingPadding(result: PaddingDefinition,
        processTop?: boolean, processRight?: boolean, processBottom?: boolean,
        processLeft?: boolean)
      parameters:
        - id: result
          type: <xref uid="adaptivecards.PaddingDefinition" />
          description: ''
        - id: processTop
          type: boolean
          description: ''
        - id: processRight
          type: boolean
          description: ''
        - id: processBottom
          type: boolean
          description: ''
        - id: processLeft
          type: boolean
          description: ''
  - name: getParentContainer()
    uid: adaptivecards.RichTextBlock.getParentContainer
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getParentContainer(): Container | undefined'
      return:
        description: ''
        type: <xref uid="adaptivecards.Container" /> | undefined
  - name: getResourceInformation()
    uid: adaptivecards.RichTextBlock.getResourceInformation
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getResourceInformation(): IResourceInformation[]'
      return:
        description: ''
        type: '<xref uid="adaptivecards.IResourceInformation" />[]'
  - name: getRootElement()
    uid: adaptivecards.RichTextBlock.getRootElement
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getRootElement(): CardElement'
      return:
        description: ''
        type: <xref uid="adaptivecards.CardElement" />
  - name: getRootObject()
    uid: adaptivecards.RichTextBlock.getRootObject
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getRootObject(): CardObject'
      return:
        description: ''
        type: <xref uid="adaptivecards.CardObject" />
  - name: getSchema()
    uid: adaptivecards.RichTextBlock.getSchema
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getSchema(): SerializableObjectSchema'
      return:
        description: ''
        type: <xref uid="adaptivecards.SerializableObjectSchema" />
  - name: hasAllDefaultValues()
    uid: adaptivecards.RichTextBlock.hasAllDefaultValues
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function hasAllDefaultValues(): boolean'
      return:
        description: ''
        type: boolean
  - name: hasDefaultValue(PropertyDefinition)
    uid: adaptivecards.RichTextBlock.hasDefaultValue
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function hasDefaultValue(property: PropertyDefinition): boolean'
      parameters:
        - id: property
          type: <xref uid="adaptivecards.PropertyDefinition" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: indexOf(CardElement)
    uid: adaptivecards.RichTextBlock.indexOf
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function indexOf(cardElement: CardElement): number'
      parameters:
        - id: cardElement
          type: <xref uid="adaptivecards.CardElement" />
          description: ''
      return:
        description: ''
        type: number
  - name: indexOfAction(Action)
    uid: adaptivecards.RichTextBlock.indexOfAction
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function indexOfAction(action: Action): number'
      parameters:
        - id: action
          type: <xref uid="adaptivecards.Action" />
          description: ''
      return:
        description: ''
        type: number
  - name: internalValidateProperties(ValidationResults)
    uid: adaptivecards.RichTextBlock.internalValidateProperties
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function internalValidateProperties(context: ValidationResults)'
      parameters:
        - id: context
          type: <xref uid="adaptivecards.ValidationResults" />
          description: ''
  - name: isAtTheVeryBottom()
    uid: adaptivecards.RichTextBlock.isAtTheVeryBottom
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isAtTheVeryBottom(): boolean'
      return:
        description: ''
        type: boolean
  - name: isAtTheVeryLeft()
    uid: adaptivecards.RichTextBlock.isAtTheVeryLeft
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isAtTheVeryLeft(): boolean'
      return:
        description: ''
        type: boolean
  - name: isAtTheVeryRight()
    uid: adaptivecards.RichTextBlock.isAtTheVeryRight
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isAtTheVeryRight(): boolean'
      return:
        description: ''
        type: boolean
  - name: isAtTheVeryTop()
    uid: adaptivecards.RichTextBlock.isAtTheVeryTop
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isAtTheVeryTop(): boolean'
      return:
        description: ''
        type: boolean
  - name: isBleeding()
    uid: adaptivecards.RichTextBlock.isBleeding
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isBleeding(): boolean'
      return:
        description: ''
        type: boolean
  - name: isBleedingAtBottom()
    uid: adaptivecards.RichTextBlock.isBleedingAtBottom
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isBleedingAtBottom(): boolean'
      return:
        description: ''
        type: boolean
  - name: isBleedingAtTop()
    uid: adaptivecards.RichTextBlock.isBleedingAtTop
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isBleedingAtTop(): boolean'
      return:
        description: ''
        type: boolean
  - name: isBottomElement(CardElement)
    uid: adaptivecards.RichTextBlock.isBottomElement
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isBottomElement(element: CardElement): boolean'
      parameters:
        - id: element
          type: <xref uid="adaptivecards.CardElement" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: isDesignMode()
    uid: adaptivecards.RichTextBlock.isDesignMode
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isDesignMode(): boolean'
      return:
        description: ''
        type: boolean
  - name: isFirstElement(CardElement)
    uid: adaptivecards.RichTextBlock.isFirstElement
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isFirstElement(element: CardElement): boolean'
      parameters:
        - id: element
          type: <xref uid="adaptivecards.CardElement" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: isHiddenDueToOverflow()
    uid: adaptivecards.RichTextBlock.isHiddenDueToOverflow
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isHiddenDueToOverflow(): boolean'
      return:
        description: ''
        type: boolean
  - name: isLastElement(CardElement)
    uid: adaptivecards.RichTextBlock.isLastElement
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isLastElement(element: CardElement): boolean'
      parameters:
        - id: element
          type: <xref uid="adaptivecards.CardElement" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: isLeftMostElement(CardElement)
    uid: adaptivecards.RichTextBlock.isLeftMostElement
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isLeftMostElement(element: CardElement): boolean'
      parameters:
        - id: element
          type: <xref uid="adaptivecards.CardElement" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: isRightMostElement(CardElement)
    uid: adaptivecards.RichTextBlock.isRightMostElement
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isRightMostElement(element: CardElement): boolean'
      parameters:
        - id: element
          type: <xref uid="adaptivecards.CardElement" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: isTopElement(CardElement)
    uid: adaptivecards.RichTextBlock.isTopElement
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isTopElement(element: CardElement): boolean'
      parameters:
        - id: element
          type: <xref uid="adaptivecards.CardElement" />
          description: ''
      return:
        description: ''
        type: boolean
  - name: 'parse(any, SerializationContext)'
    uid: adaptivecards.RichTextBlock.parse
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function parse(source: any, context?: SerializationContext)'
      parameters:
        - id: source
          type: any
          description: ''
        - id: context
          type: <xref uid="adaptivecards.SerializationContext" />
          description: ''
  - name: 'preProcessPropertyValue(PropertyDefinition, any)'
    uid: adaptivecards.RichTextBlock.preProcessPropertyValue
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function preProcessPropertyValue(property: PropertyDefinition,
        propertyValue?: any): any
      parameters:
        - id: property
          type: <xref uid="adaptivecards.PropertyDefinition" />
          description: ''
        - id: propertyValue
          type: any
          description: ''
      return:
        description: ''
        type: any
  - name: remove()
    uid: adaptivecards.RichTextBlock.remove
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function remove(): boolean'
      return:
        description: ''
        type: boolean
  - name: render()
    uid: adaptivecards.RichTextBlock.render
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function render(): HTMLElement | undefined'
      return:
        description: ''
        type: HTMLElement | undefined
  - name: resetDefaultValues()
    uid: adaptivecards.RichTextBlock.resetDefaultValues
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function resetDefaultValues()
  - name: 'setCustomProperty(string, any)'
    uid: adaptivecards.RichTextBlock.setCustomProperty
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setCustomProperty(name: string, value: any)'
      parameters:
        - id: name
          type: string
          description: ''
        - id: value
          type: any
          description: ''
  - name: setParent(CardObject | undefined)
    uid: adaptivecards.RichTextBlock.setParent
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setParent(value: CardObject | undefined)'
      parameters:
        - id: value
          type: <xref uid="adaptivecards.CardObject" /> | undefined
          description: ''
  - name: setShouldFallback(boolean)
    uid: adaptivecards.RichTextBlock.setShouldFallback
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setShouldFallback(value: boolean)'
      parameters:
        - id: value
          type: boolean
          description: ''
  - name: shouldFallback()
    uid: adaptivecards.RichTextBlock.shouldFallback
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function shouldFallback(): boolean'
      return:
        description: ''
        type: boolean
  - name: toJSON(BaseSerializationContext)
    uid: adaptivecards.RichTextBlock.toJSON
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function toJSON(context?: BaseSerializationContext): PropertyBag |
        undefined
      parameters:
        - id: context
          type: <xref uid="adaptivecards.BaseSerializationContext" />
          description: ''
      return:
        description: ''
        type: <xref uid="adaptivecards.PropertyBag" /> | undefined
  - name: updateLayout(boolean)
    uid: adaptivecards.RichTextBlock.updateLayout
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function updateLayout(processChildren?: boolean)'
      parameters:
        - id: processChildren
          type: boolean
          description: ''
  - name: validateProperties()
    uid: adaptivecards.RichTextBlock.validateProperties
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function validateProperties(): ValidationResults'
      return:
        description: ''
        type: <xref uid="adaptivecards.ValidationResults" />
methods:
  - name: addInline(CardElement | string)
    uid: adaptivecards.RichTextBlock.addInline
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function addInline(inline: CardElement | string)'
      parameters:
        - id: inline
          type: <xref uid="adaptivecards.CardElement" /> | string
          description: ''
  - name: asString()
    uid: adaptivecards.RichTextBlock.asString
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function asString(): string | undefined'
      return:
        description: ''
        type: string | undefined
  - name: getInlineAt(number)
    uid: adaptivecards.RichTextBlock.getInlineAt
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getInlineAt(index: number): CardElement'
      parameters:
        - id: index
          type: number
          description: ''
      return:
        description: ''
        type: <xref uid="adaptivecards.CardElement" />
  - name: getInlineCount()
    uid: adaptivecards.RichTextBlock.getInlineCount
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getInlineCount(): number'
      return:
        description: ''
        type: number
  - name: getJsonTypeName()
    uid: adaptivecards.RichTextBlock.getJsonTypeName
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getJsonTypeName(): string'
      return:
        description: ''
        type: string
  - name: removeInline(CardElement)
    uid: adaptivecards.RichTextBlock.removeInline
    package: adaptivecards
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeInline(inline: CardElement): boolean'
      parameters:
        - id: inline
          type: <xref uid="adaptivecards.CardElement" />
          description: ''
      return:
        description: ''
        type: boolean
extends: <xref uid="adaptivecards.CardElement" />

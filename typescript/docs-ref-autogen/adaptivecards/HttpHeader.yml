### YamlMime:UniversalReference
items:
  - uid: adaptivecards.HttpHeader
    name: HttpHeader
    fullName: HttpHeader
    children:
      - adaptivecards.HttpHeader.getCustomProperty
      - adaptivecards.HttpHeader.getReferencedInputs
      - adaptivecards.HttpHeader.getSchema
      - adaptivecards.HttpHeader.hasAllDefaultValues
      - adaptivecards.HttpHeader.hasDefaultValue
      - adaptivecards.HttpHeader.constructor
      - adaptivecards.HttpHeader.maxVersion
      - adaptivecards.HttpHeader.name
      - adaptivecards.HttpHeader.nameProperty
      - adaptivecards.HttpHeader.onRegisterCustomProperties
      - adaptivecards.HttpHeader.parse
      - adaptivecards.HttpHeader.prepareForExecution
      - adaptivecards.HttpHeader.resetDefaultValues
      - adaptivecards.HttpHeader.setCustomProperty
      - adaptivecards.HttpHeader.toJSON
      - adaptivecards.HttpHeader.value
      - adaptivecards.HttpHeader.valueProperty
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: adaptivecards.SerializableObject
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.getCustomProperty
    name: getCustomProperty(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCustomProperty(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
      return:
        type:
          - any
        description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.getReferencedInputs
    name: 'getReferencedInputs(Input[], Dictionary<Input>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getReferencedInputs(inputs: Input[], referencedInputs:
        Dictionary<Input>)
      parameters:
        - id: inputs
          type:
            - 'adaptivecards.Input[]'
          description: ''
        - id: referencedInputs
          type:
            - adaptivecards.Dictionary<adaptivecards.Input>
          description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.getSchema
    name: getSchema()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSchema()
      parameters: []
      return:
        type:
          - adaptivecards.SerializableObjectSchema
        description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.hasAllDefaultValues
    name: hasAllDefaultValues()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function hasAllDefaultValues()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.hasDefaultValue
    name: hasDefaultValue(PropertyDefinition)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function hasDefaultValue(property: PropertyDefinition)'
      parameters:
        - id: property
          type:
            - adaptivecards.PropertyDefinition
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.constructor
    name: 'HttpHeader(string, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new HttpHeader(name?: string, value?: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
          optional: true
        - id: value
          type:
            - string
          description: ''
          optional: true
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.maxVersion
    name: maxVersion
    fullName: maxVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'maxVersion: Version'
      return:
        type:
          - adaptivecards.Version
        description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.nameProperty
    name: nameProperty
    fullName: nameProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static nameProperty: StringProperty'
      return:
        type:
          - adaptivecards.StringProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.onRegisterCustomProperties
    name: onRegisterCustomProperties
    fullName: onRegisterCustomProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: >-
        static onRegisterCustomProperties?: (sender: SerializableObject, schema:
        SerializableObjectSchema) => void
      return:
        type:
          - >-
            (sender: SerializableObject, schema: SerializableObjectSchema) =>
            void
        description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.parse
    name: 'parse(PropertyBag, BaseSerializationContext)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function parse(source: PropertyBag, context?: BaseSerializationContext)'
      parameters:
        - id: source
          type:
            - adaptivecards.PropertyBag
          description: ''
        - id: context
          type:
            - adaptivecards.BaseSerializationContext
          description: ''
          optional: true
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.prepareForExecution
    name: prepareForExecution(Dictionary<Input>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prepareForExecution(inputs: Dictionary<Input>)'
      parameters:
        - id: inputs
          type:
            - adaptivecards.Dictionary<adaptivecards.Input>
          description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.resetDefaultValues
    name: resetDefaultValues()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resetDefaultValues()
      parameters: []
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.setCustomProperty
    name: 'setCustomProperty(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setCustomProperty(name: string, value: any)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: value
          type:
            - any
          description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.toJSON
    name: toJSON(BaseSerializationContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function toJSON(context?: BaseSerializationContext)'
      parameters:
        - id: context
          type:
            - adaptivecards.BaseSerializationContext
          description: ''
          optional: true
      return:
        type:
          - adaptivecards.PropertyBag | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.value
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string | undefined value
      return:
        type:
          - string | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.HttpHeader.valueProperty
    name: valueProperty
    fullName: valueProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static valueProperty: StringWithSubstitutionProperty'
      return:
        type:
          - adaptivecards.StringWithSubstitutionProperty
        description: ''
    package: adaptivecards
references:
  - uid: adaptivecards.SerializableObject
    name: SerializableObject
    spec.typeScript:
      - name: SerializableObject
        fullName: SerializableObject
        uid: adaptivecards.SerializableObject
  - uid: adaptivecards.Version
    name: Version
    spec.typeScript:
      - name: Version
        fullName: Version
        uid: adaptivecards.Version
  - uid: adaptivecards.StringProperty
    name: StringProperty
    spec.typeScript:
      - name: StringProperty
        fullName: StringProperty
        uid: adaptivecards.StringProperty
  - uid: adaptivecards.StringWithSubstitutionProperty
    name: StringWithSubstitutionProperty
    spec.typeScript:
      - name: StringWithSubstitutionProperty
        fullName: StringWithSubstitutionProperty
        uid: adaptivecards.StringWithSubstitutionProperty
  - uid: 'adaptivecards.Input[]'
    name: 'Input[]'
    spec.typeScript:
      - name: Input
        fullName: Input
        uid: adaptivecards.Input
      - name: '[]'
        fullName: '[]'
  - uid: adaptivecards.Dictionary<adaptivecards.Input>
    name: Input>
    spec.typeScript:
      - name: Dictionary
        fullName: Dictionary
        uid: adaptivecards.Dictionary
      - name: <
        fullName: <
      - name: Input
        fullName: Input
        uid: adaptivecards.Input
      - name: '>'
        fullName: '>'
  - uid: adaptivecards.SerializableObjectSchema
    name: SerializableObjectSchema
    spec.typeScript:
      - name: SerializableObjectSchema
        fullName: SerializableObjectSchema
        uid: adaptivecards.SerializableObjectSchema
  - uid: adaptivecards.PropertyDefinition
    name: PropertyDefinition
    spec.typeScript:
      - name: PropertyDefinition
        fullName: PropertyDefinition
        uid: adaptivecards.PropertyDefinition
  - uid: adaptivecards.PropertyBag
    name: PropertyBag
    spec.typeScript:
      - name: PropertyBag
        fullName: PropertyBag
        uid: adaptivecards.PropertyBag
  - uid: adaptivecards.BaseSerializationContext
    name: BaseSerializationContext
    spec.typeScript:
      - name: BaseSerializationContext
        fullName: BaseSerializationContext
        uid: adaptivecards.BaseSerializationContext
  - uid: adaptivecards.PropertyBag | undefined
    name: PropertyBag | undefined
    spec.typeScript:
      - name: PropertyBag
        fullName: PropertyBag
        uid: adaptivecards.PropertyBag
      - name: ' | undefined'
        fullName: ' | undefined'

### YamlMime:UniversalReference
items:
  - uid: adaptivecards.BackgroundImage
    name: BackgroundImage
    fullName: BackgroundImage
    children:
      - adaptivecards.BackgroundImage.apply
      - adaptivecards.BackgroundImage.constructor
      - adaptivecards.BackgroundImage.fillMode
      - adaptivecards.BackgroundImage.fillModeProperty
      - adaptivecards.BackgroundImage.getCustomProperty
      - adaptivecards.BackgroundImage.getSchema
      - adaptivecards.BackgroundImage.hasAllDefaultValues
      - adaptivecards.BackgroundImage.hasDefaultValue
      - adaptivecards.BackgroundImage.horizontalAlignment
      - adaptivecards.BackgroundImage.horizontalAlignmentProperty
      - adaptivecards.BackgroundImage.isValid
      - adaptivecards.BackgroundImage.maxVersion
      - adaptivecards.BackgroundImage.onRegisterCustomProperties
      - adaptivecards.BackgroundImage.parse
      - adaptivecards.BackgroundImage.resetDefaultValues
      - adaptivecards.BackgroundImage.setCustomProperty
      - adaptivecards.BackgroundImage.toJSON
      - adaptivecards.BackgroundImage.url
      - adaptivecards.BackgroundImage.urlProperty
      - adaptivecards.BackgroundImage.verticalAlignment
      - adaptivecards.BackgroundImage.verticalAlignmentProperty
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: adaptivecards.SerializableObject
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.apply
    name: apply(CardElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function apply(element: CardElement)'
      parameters:
        - id: element
          type:
            - adaptivecards.CardElement
          description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.constructor
    name: BackgroundImage()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new BackgroundImage()
      parameters: []
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.fillMode
    name: fillMode
    fullName: fillMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'fillMode: FillMode'
      return:
        type:
          - adaptivecards.FillMode
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.fillModeProperty
    name: fillModeProperty
    fullName: fillModeProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static fillModeProperty: EnumProperty<FillMode>'
      return:
        type:
          - adaptivecards.EnumProperty<adaptivecards.FillMode>
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.getCustomProperty
    name: getCustomProperty(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCustomProperty(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
      return:
        type:
          - any
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.getSchema
    name: getSchema()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSchema()
      parameters: []
      return:
        type:
          - adaptivecards.SerializableObjectSchema
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.hasAllDefaultValues
    name: hasAllDefaultValues()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function hasAllDefaultValues()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.hasDefaultValue
    name: hasDefaultValue(PropertyDefinition)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function hasDefaultValue(property: PropertyDefinition)'
      parameters:
        - id: property
          type:
            - adaptivecards.PropertyDefinition
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.horizontalAlignment
    name: horizontalAlignment
    fullName: horizontalAlignment
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'horizontalAlignment: HorizontalAlignment'
      return:
        type:
          - adaptivecards.HorizontalAlignment
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.horizontalAlignmentProperty
    name: horizontalAlignmentProperty
    fullName: horizontalAlignmentProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static horizontalAlignmentProperty: EnumProperty<HorizontalAlignment>'
      return:
        type:
          - adaptivecards.EnumProperty<adaptivecards.HorizontalAlignment>
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.isValid
    name: isValid()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isValid()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.maxVersion
    name: maxVersion
    fullName: maxVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'maxVersion: Version'
      return:
        type:
          - adaptivecards.Version
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.onRegisterCustomProperties
    name: onRegisterCustomProperties
    fullName: onRegisterCustomProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: >-
        static onRegisterCustomProperties?: (sender: SerializableObject, schema:
        SerializableObjectSchema) => void
      return:
        type:
          - >-
            (sender: SerializableObject, schema: SerializableObjectSchema) =>
            void
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.parse
    name: 'parse(PropertyBag, BaseSerializationContext)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function parse(source: PropertyBag, context?: BaseSerializationContext)'
      parameters:
        - id: source
          type:
            - adaptivecards.PropertyBag
          description: ''
        - id: context
          type:
            - adaptivecards.BaseSerializationContext
          description: ''
          optional: true
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.resetDefaultValues
    name: resetDefaultValues()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resetDefaultValues()
      parameters: []
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.setCustomProperty
    name: 'setCustomProperty(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setCustomProperty(name: string, value: any)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: value
          type:
            - any
          description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.toJSON
    name: toJSON(BaseSerializationContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function toJSON(context?: BaseSerializationContext)'
      parameters:
        - id: context
          type:
            - adaptivecards.BaseSerializationContext
          description: ''
          optional: true
      return:
        type:
          - adaptivecards.PropertyBag | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.url
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'url?: string'
      return:
        type:
          - string
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.urlProperty
    name: urlProperty
    fullName: urlProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static urlProperty: StringProperty'
      return:
        type:
          - adaptivecards.StringProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.verticalAlignment
    name: verticalAlignment
    fullName: verticalAlignment
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'verticalAlignment: VerticalAlignment'
      return:
        type:
          - adaptivecards.VerticalAlignment
        description: ''
    package: adaptivecards
  - uid: adaptivecards.BackgroundImage.verticalAlignmentProperty
    name: verticalAlignmentProperty
    fullName: verticalAlignmentProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static verticalAlignmentProperty: EnumProperty<VerticalAlignment>'
      return:
        type:
          - adaptivecards.EnumProperty<adaptivecards.VerticalAlignment>
        description: ''
    package: adaptivecards
references:
  - uid: adaptivecards.SerializableObject
    name: SerializableObject
    spec.typeScript:
      - name: SerializableObject
        fullName: SerializableObject
        uid: adaptivecards.SerializableObject
  - uid: adaptivecards.FillMode
    name: FillMode
    spec.typeScript:
      - name: FillMode
        fullName: FillMode
        uid: adaptivecards.FillMode
  - uid: adaptivecards.HorizontalAlignment
    name: HorizontalAlignment
    spec.typeScript:
      - name: HorizontalAlignment
        fullName: HorizontalAlignment
        uid: adaptivecards.HorizontalAlignment
  - uid: adaptivecards.Version
    name: Version
    spec.typeScript:
      - name: Version
        fullName: Version
        uid: adaptivecards.Version
  - uid: adaptivecards.VerticalAlignment
    name: VerticalAlignment
    spec.typeScript:
      - name: VerticalAlignment
        fullName: VerticalAlignment
        uid: adaptivecards.VerticalAlignment
  - uid: adaptivecards.EnumProperty<adaptivecards.FillMode>
    name: FillMode>
    spec.typeScript:
      - name: EnumProperty
        fullName: EnumProperty
        uid: adaptivecards.EnumProperty
      - name: <
        fullName: <
      - name: FillMode
        fullName: FillMode
        uid: adaptivecards.FillMode
      - name: '>'
        fullName: '>'
  - uid: adaptivecards.EnumProperty<adaptivecards.HorizontalAlignment>
    name: HorizontalAlignment>
    spec.typeScript:
      - name: EnumProperty
        fullName: EnumProperty
        uid: adaptivecards.EnumProperty
      - name: <
        fullName: <
      - name: HorizontalAlignment
        fullName: HorizontalAlignment
        uid: adaptivecards.HorizontalAlignment
      - name: '>'
        fullName: '>'
  - uid: adaptivecards.StringProperty
    name: StringProperty
    spec.typeScript:
      - name: StringProperty
        fullName: StringProperty
        uid: adaptivecards.StringProperty
  - uid: adaptivecards.EnumProperty<adaptivecards.VerticalAlignment>
    name: VerticalAlignment>
    spec.typeScript:
      - name: EnumProperty
        fullName: EnumProperty
        uid: adaptivecards.EnumProperty
      - name: <
        fullName: <
      - name: VerticalAlignment
        fullName: VerticalAlignment
        uid: adaptivecards.VerticalAlignment
      - name: '>'
        fullName: '>'
  - uid: adaptivecards.CardElement
    name: CardElement
    spec.typeScript:
      - name: CardElement
        fullName: CardElement
        uid: adaptivecards.CardElement
  - uid: adaptivecards.SerializableObjectSchema
    name: SerializableObjectSchema
    spec.typeScript:
      - name: SerializableObjectSchema
        fullName: SerializableObjectSchema
        uid: adaptivecards.SerializableObjectSchema
  - uid: adaptivecards.PropertyDefinition
    name: PropertyDefinition
    spec.typeScript:
      - name: PropertyDefinition
        fullName: PropertyDefinition
        uid: adaptivecards.PropertyDefinition
  - uid: adaptivecards.PropertyBag
    name: PropertyBag
    spec.typeScript:
      - name: PropertyBag
        fullName: PropertyBag
        uid: adaptivecards.PropertyBag
  - uid: adaptivecards.BaseSerializationContext
    name: BaseSerializationContext
    spec.typeScript:
      - name: BaseSerializationContext
        fullName: BaseSerializationContext
        uid: adaptivecards.BaseSerializationContext
  - uid: adaptivecards.PropertyBag | undefined
    name: PropertyBag | undefined
    spec.typeScript:
      - name: PropertyBag
        fullName: PropertyBag
        uid: adaptivecards.PropertyBag
      - name: ' | undefined'
        fullName: ' | undefined'

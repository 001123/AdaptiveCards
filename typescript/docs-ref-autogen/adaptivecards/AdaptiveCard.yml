### YamlMime:UniversalReference
items:
  - uid: adaptivecards.AdaptiveCard
    name: AdaptiveCard
    fullName: AdaptiveCard
    children:
      - adaptivecards.AdaptiveCard.constructor
      - adaptivecards.AdaptiveCard.addAction
      - adaptivecards.AdaptiveCard.addItem
      - adaptivecards.AdaptiveCard.allowVerticalOverflow
      - adaptivecards.AdaptiveCard.applyMarkdown
      - adaptivecards.AdaptiveCard.asString
      - adaptivecards.AdaptiveCard.backgroundImage
      - adaptivecards.AdaptiveCard.backgroundImageProperty
      - adaptivecards.AdaptiveCard.bleed
      - adaptivecards.AdaptiveCard.bleedProperty
      - adaptivecards.AdaptiveCard.clear
      - adaptivecards.AdaptiveCard.customCssSelector
      - adaptivecards.AdaptiveCard.designMode
      - adaptivecards.AdaptiveCard.fallbackText
      - adaptivecards.AdaptiveCard.fallbackTextProperty
      - adaptivecards.AdaptiveCard.getActionAt
      - adaptivecards.AdaptiveCard.getActionById
      - adaptivecards.AdaptiveCard.getActionCount
      - adaptivecards.AdaptiveCard.getAllInputs
      - adaptivecards.AdaptiveCard.getCustomProperty
      - adaptivecards.AdaptiveCard.getEffectivePadding
      - adaptivecards.AdaptiveCard.getEffectiveStyle
      - adaptivecards.AdaptiveCard.getEffectiveStyleDefinition
      - adaptivecards.AdaptiveCard.getElementById
      - adaptivecards.AdaptiveCard.getFirstVisibleRenderedItem
      - adaptivecards.AdaptiveCard.getForbiddenActionTypes
      - adaptivecards.AdaptiveCard.getImmediateSurroundingPadding
      - adaptivecards.AdaptiveCard.getItemAt
      - adaptivecards.AdaptiveCard.getItemCount
      - adaptivecards.AdaptiveCard.getJsonTypeName
      - adaptivecards.AdaptiveCard.getLastVisibleRenderedItem
      - adaptivecards.AdaptiveCard.getParentContainer
      - adaptivecards.AdaptiveCard.getResourceInformation
      - adaptivecards.AdaptiveCard.getRootElement
      - adaptivecards.AdaptiveCard.getRootObject
      - adaptivecards.AdaptiveCard.getSchema
      - adaptivecards.AdaptiveCard.hasAllDefaultValues
      - adaptivecards.AdaptiveCard.hasDefaultValue
      - adaptivecards.AdaptiveCard.hasVisibleSeparator
      - adaptivecards.AdaptiveCard.height
      - adaptivecards.AdaptiveCard.heightProperty
      - adaptivecards.AdaptiveCard.horizontalAlignment
      - adaptivecards.AdaptiveCard.horizontalAlignmentProperty
      - adaptivecards.AdaptiveCard.hostConfig
      - adaptivecards.AdaptiveCard.id
      - adaptivecards.AdaptiveCard.idProperty
      - adaptivecards.AdaptiveCard.index
      - adaptivecards.AdaptiveCard.indexOf
      - adaptivecards.AdaptiveCard.insertItemAfter
      - adaptivecards.AdaptiveCard.insertItemBefore
      - adaptivecards.AdaptiveCard.internalValidateProperties
      - adaptivecards.AdaptiveCard.isAtTheVeryBottom
      - adaptivecards.AdaptiveCard.isAtTheVeryLeft
      - adaptivecards.AdaptiveCard.isAtTheVeryRight
      - adaptivecards.AdaptiveCard.isAtTheVeryTop
      - adaptivecards.AdaptiveCard.isBleeding
      - adaptivecards.AdaptiveCard.isBleedingAtBottom
      - adaptivecards.AdaptiveCard.isBleedingAtTop
      - adaptivecards.AdaptiveCard.isBottomElement
      - adaptivecards.AdaptiveCard.isDesignMode
      - adaptivecards.AdaptiveCard.isFirstElement
      - adaptivecards.AdaptiveCard.isHiddenDueToOverflow
      - adaptivecards.AdaptiveCard.isInline
      - adaptivecards.AdaptiveCard.isInteractive
      - adaptivecards.AdaptiveCard.isLastElement
      - adaptivecards.AdaptiveCard.isLeftMostElement
      - adaptivecards.AdaptiveCard.isRightMostElement
      - adaptivecards.AdaptiveCard.isRtl
      - adaptivecards.AdaptiveCard.isStandalone
      - adaptivecards.AdaptiveCard.isTopElement
      - adaptivecards.AdaptiveCard.isVisible
      - adaptivecards.AdaptiveCard.isVisibleProperty
      - adaptivecards.AdaptiveCard.lang
      - adaptivecards.AdaptiveCard.langProperty
      - adaptivecards.AdaptiveCard.maxVersion
      - adaptivecards.AdaptiveCard.minHeightProperty
      - adaptivecards.AdaptiveCard.minPixelHeight
      - adaptivecards.AdaptiveCard.onAnchorClicked
      - adaptivecards.AdaptiveCard.onAnchorClicked
      - adaptivecards.AdaptiveCard.onElementVisibilityChanged
      - adaptivecards.AdaptiveCard.onElementVisibilityChanged
      - adaptivecards.AdaptiveCard.onExecuteAction
      - adaptivecards.AdaptiveCard.onExecuteAction
      - adaptivecards.AdaptiveCard.onImageLoaded
      - adaptivecards.AdaptiveCard.onImageLoaded
      - adaptivecards.AdaptiveCard.onInlineCardExpanded
      - adaptivecards.AdaptiveCard.onInlineCardExpanded
      - adaptivecards.AdaptiveCard.onInputValueChanged
      - adaptivecards.AdaptiveCard.onInputValueChanged
      - adaptivecards.AdaptiveCard.onPreProcessPropertyValue
      - adaptivecards.AdaptiveCard.onProcessMarkdown
      - adaptivecards.AdaptiveCard.onRegisterCustomProperties
      - adaptivecards.AdaptiveCard.padding
      - adaptivecards.AdaptiveCard.parent
      - adaptivecards.AdaptiveCard.parse
      - adaptivecards.AdaptiveCard.preProcessPropertyValue
      - adaptivecards.AdaptiveCard.processMarkdown
      - adaptivecards.AdaptiveCard.remove
      - adaptivecards.AdaptiveCard.removeItem
      - adaptivecards.AdaptiveCard.render
      - adaptivecards.AdaptiveCard.renderedElement
      - adaptivecards.AdaptiveCard.requires
      - adaptivecards.AdaptiveCard.requiresProperty
      - adaptivecards.AdaptiveCard.resetDefaultValues
      - adaptivecards.AdaptiveCard.rtl
      - adaptivecards.AdaptiveCard.rtlProperty
      - adaptivecards.AdaptiveCard.schemaUrl
      - adaptivecards.AdaptiveCard.selectAction
      - adaptivecards.AdaptiveCard.selectActionProperty
      - adaptivecards.AdaptiveCard.separator
      - adaptivecards.AdaptiveCard.separatorElement
      - adaptivecards.AdaptiveCard.separatorProperty
      - adaptivecards.AdaptiveCard.setCustomProperty
      - adaptivecards.AdaptiveCard.setParent
      - adaptivecards.AdaptiveCard.setShouldFallback
      - adaptivecards.AdaptiveCard.shouldFallback
      - adaptivecards.AdaptiveCard.spacing
      - adaptivecards.AdaptiveCard.spacingProperty
      - adaptivecards.AdaptiveCard.speak
      - adaptivecards.AdaptiveCard.speakProperty
      - adaptivecards.AdaptiveCard.style
      - adaptivecards.AdaptiveCard.styleProperty
      - adaptivecards.AdaptiveCard.toJSON
      - adaptivecards.AdaptiveCard.typeNameProperty
      - adaptivecards.AdaptiveCard.updateLayout
      - adaptivecards.AdaptiveCard.validateProperties
      - adaptivecards.AdaptiveCard.version
      - adaptivecards.AdaptiveCard.versionProperty
      - adaptivecards.AdaptiveCard.verticalContentAlignment
      - adaptivecards.AdaptiveCard.verticalContentAlignmentProperty
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: adaptivecards.ContainerWithActions
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.constructor
    name: AdaptiveCard()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new AdaptiveCard()
      parameters: []
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.addAction
    name: addAction(Action)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addAction(action: Action)'
      parameters:
        - id: action
          type:
            - adaptivecards.Action
          description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.addItem
    name: addItem(CardElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addItem(item: CardElement)'
      parameters:
        - id: item
          type:
            - adaptivecards.CardElement
          description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.allowVerticalOverflow
    name: allowVerticalOverflow
    fullName: allowVerticalOverflow
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'allowVerticalOverflow: boolean'
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.applyMarkdown
    name: applyMarkdown(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function applyMarkdown(text: string)'
      parameters:
        - id: text
          type:
            - string
          description: ''
      return:
        type:
          - adaptivecards.IMarkdownProcessingResult
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.asString
    name: asString()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function asString()
      parameters: []
      return:
        type:
          - string | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.backgroundImage
    name: backgroundImage
    fullName: backgroundImage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: BackgroundImage backgroundImage
      return:
        type:
          - adaptivecards.BackgroundImage
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.backgroundImageProperty
    name: backgroundImageProperty
    fullName: backgroundImageProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static backgroundImageProperty: SerializableObjectProperty'
      return:
        type:
          - adaptivecards.SerializableObjectProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.bleed
    name: bleed
    fullName: bleed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean bleed
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.bleedProperty
    name: bleedProperty
    fullName: bleedProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static bleedProperty: BoolProperty'
      return:
        type:
          - adaptivecards.BoolProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.clear
    name: clear()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function clear()
      parameters: []
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.customCssSelector
    name: customCssSelector
    fullName: customCssSelector
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'customCssSelector?: string'
      return:
        type:
          - string
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.designMode
    name: designMode
    fullName: designMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'designMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.fallbackText
    name: fallbackText
    fullName: fallbackText
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'fallbackText?: string'
      return:
        type:
          - string
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.fallbackTextProperty
    name: fallbackTextProperty
    fullName: fallbackTextProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static fallbackTextProperty: StringProperty'
      return:
        type:
          - adaptivecards.StringProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getActionAt
    name: getActionAt(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getActionAt(index: number)'
      parameters:
        - id: index
          type:
            - number
          description: ''
      return:
        type:
          - adaptivecards.Action | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getActionById
    name: getActionById(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getActionById(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: ''
      return:
        type:
          - adaptivecards.Action | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getActionCount
    name: getActionCount()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getActionCount()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getAllInputs
    name: getAllInputs(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllInputs(processActions?: boolean)'
      parameters:
        - id: processActions
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - 'adaptivecards.Input[]'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getCustomProperty
    name: getCustomProperty(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCustomProperty(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
      return:
        type:
          - any
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getEffectivePadding
    name: getEffectivePadding()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getEffectivePadding()
      parameters: []
      return:
        type:
          - adaptivecards.PaddingDefinition
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getEffectiveStyle
    name: getEffectiveStyle()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getEffectiveStyle()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getEffectiveStyleDefinition
    name: getEffectiveStyleDefinition()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getEffectiveStyleDefinition()
      parameters: []
      return:
        type:
          - adaptivecards.ContainerStyleDefinition
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getElementById
    name: getElementById(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getElementById(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: ''
      return:
        type:
          - adaptivecards.CardElement | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getFirstVisibleRenderedItem
    name: getFirstVisibleRenderedItem()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getFirstVisibleRenderedItem()
      parameters: []
      return:
        type:
          - adaptivecards.CardElement | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getForbiddenActionTypes
    name: getForbiddenActionTypes()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getForbiddenActionTypes()
      parameters: []
      return:
        type:
          - 'adaptivecards.ActionType[]'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getImmediateSurroundingPadding
    name: >-
      getImmediateSurroundingPadding(PaddingDefinition, boolean, boolean,
      boolean, boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getImmediateSurroundingPadding(result: PaddingDefinition,
        processTop?: boolean, processRight?: boolean, processBottom?: boolean,
        processLeft?: boolean)
      parameters:
        - id: result
          type:
            - adaptivecards.PaddingDefinition
          description: ''
        - id: processTop
          type:
            - boolean
          description: ''
          optional: true
        - id: processRight
          type:
            - boolean
          description: ''
          optional: true
        - id: processBottom
          type:
            - boolean
          description: ''
          optional: true
        - id: processLeft
          type:
            - boolean
          description: ''
          optional: true
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getItemAt
    name: getItemAt(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getItemAt(index: number)'
      parameters:
        - id: index
          type:
            - number
          description: ''
      return:
        type:
          - adaptivecards.CardElement
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getItemCount
    name: getItemCount()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getItemCount()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getJsonTypeName
    name: getJsonTypeName()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getJsonTypeName()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getLastVisibleRenderedItem
    name: getLastVisibleRenderedItem()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getLastVisibleRenderedItem()
      parameters: []
      return:
        type:
          - adaptivecards.CardElement | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getParentContainer
    name: getParentContainer()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getParentContainer()
      parameters: []
      return:
        type:
          - adaptivecards.Container | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getResourceInformation
    name: getResourceInformation()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getResourceInformation()
      parameters: []
      return:
        type:
          - 'adaptivecards.IResourceInformation[]'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getRootElement
    name: getRootElement()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getRootElement()
      parameters: []
      return:
        type:
          - adaptivecards.CardElement
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getRootObject
    name: getRootObject()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getRootObject()
      parameters: []
      return:
        type:
          - adaptivecards.CardObject
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.getSchema
    name: getSchema()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSchema()
      parameters: []
      return:
        type:
          - adaptivecards.SerializableObjectSchema
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.hasAllDefaultValues
    name: hasAllDefaultValues()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function hasAllDefaultValues()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.hasDefaultValue
    name: hasDefaultValue(PropertyDefinition)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function hasDefaultValue(property: PropertyDefinition)'
      parameters:
        - id: property
          type:
            - adaptivecards.PropertyDefinition
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.hasVisibleSeparator
    name: hasVisibleSeparator
    fullName: hasVisibleSeparator
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean hasVisibleSeparator
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.height
    name: height
    fullName: height
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'height: CardElementHeight'
      return:
        type:
          - adaptivecards.CardElementHeight
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.heightProperty
    name: heightProperty
    fullName: heightProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static heightProperty: ValueSetProperty'
      return:
        type:
          - adaptivecards.ValueSetProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.horizontalAlignment
    name: horizontalAlignment
    fullName: horizontalAlignment
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'horizontalAlignment: HorizontalAlignment'
      return:
        type:
          - adaptivecards.HorizontalAlignment
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.horizontalAlignmentProperty
    name: horizontalAlignmentProperty
    fullName: horizontalAlignmentProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static horizontalAlignmentProperty: EnumProperty<HorizontalAlignment>'
      return:
        type:
          - adaptivecards.EnumProperty<adaptivecards.HorizontalAlignment>
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.hostConfig
    name: hostConfig
    fullName: hostConfig
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: HostConfig hostConfig
      return:
        type:
          - adaptivecards.HostConfig
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.idProperty
    name: idProperty
    fullName: idProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static idProperty: StringProperty'
      return:
        type:
          - adaptivecards.StringProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.index
    name: index
    fullName: index
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number index
      return:
        type:
          - number
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.indexOf
    name: indexOf(CardElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function indexOf(cardElement: CardElement)'
      parameters:
        - id: cardElement
          type:
            - adaptivecards.CardElement
          description: ''
      return:
        type:
          - number
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.insertItemAfter
    name: 'insertItemAfter(CardElement, CardElement)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function insertItemAfter(item: CardElement, insertAfter: CardElement)'
      parameters:
        - id: item
          type:
            - adaptivecards.CardElement
          description: ''
        - id: insertAfter
          type:
            - adaptivecards.CardElement
          description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.insertItemBefore
    name: 'insertItemBefore(CardElement, CardElement)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function insertItemBefore(item: CardElement, insertBefore: CardElement)'
      parameters:
        - id: item
          type:
            - adaptivecards.CardElement
          description: ''
        - id: insertBefore
          type:
            - adaptivecards.CardElement
          description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.internalValidateProperties
    name: internalValidateProperties(ValidationResults)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function internalValidateProperties(context: ValidationResults)'
      parameters:
        - id: context
          type:
            - adaptivecards.ValidationResults
          description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isAtTheVeryBottom
    name: isAtTheVeryBottom()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isAtTheVeryBottom()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isAtTheVeryLeft
    name: isAtTheVeryLeft()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isAtTheVeryLeft()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isAtTheVeryRight
    name: isAtTheVeryRight()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isAtTheVeryRight()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isAtTheVeryTop
    name: isAtTheVeryTop()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isAtTheVeryTop()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isBleeding
    name: isBleeding()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isBleeding()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isBleedingAtBottom
    name: isBleedingAtBottom()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isBleedingAtBottom()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isBleedingAtTop
    name: isBleedingAtTop()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isBleedingAtTop()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isBottomElement
    name: isBottomElement(CardElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isBottomElement(element: CardElement)'
      parameters:
        - id: element
          type:
            - adaptivecards.CardElement
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isDesignMode
    name: isDesignMode()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isDesignMode()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isFirstElement
    name: isFirstElement(CardElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isFirstElement(element: CardElement)'
      parameters:
        - id: element
          type:
            - adaptivecards.CardElement
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isHiddenDueToOverflow
    name: isHiddenDueToOverflow()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isHiddenDueToOverflow()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isInline
    name: isInline
    fullName: isInline
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean isInline
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isInteractive
    name: isInteractive
    fullName: isInteractive
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean isInteractive
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isLastElement
    name: isLastElement(CardElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isLastElement(element: CardElement)'
      parameters:
        - id: element
          type:
            - adaptivecards.CardElement
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isLeftMostElement
    name: isLeftMostElement(CardElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isLeftMostElement(element: CardElement)'
      parameters:
        - id: element
          type:
            - adaptivecards.CardElement
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isRightMostElement
    name: isRightMostElement(CardElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isRightMostElement(element: CardElement)'
      parameters:
        - id: element
          type:
            - adaptivecards.CardElement
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isRtl
    name: isRtl()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isRtl()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isStandalone
    name: isStandalone
    fullName: isStandalone
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean isStandalone
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isTopElement
    name: isTopElement(CardElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isTopElement(element: CardElement)'
      parameters:
        - id: element
          type:
            - adaptivecards.CardElement
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isVisible
    name: isVisible
    fullName: isVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean isVisible
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.isVisibleProperty
    name: isVisibleProperty
    fullName: isVisibleProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static isVisibleProperty: BoolProperty'
      return:
        type:
          - adaptivecards.BoolProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.lang
    name: lang
    fullName: lang
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string | undefined lang
      return:
        type:
          - string | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.langProperty
    name: langProperty
    fullName: langProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static langProperty: StringProperty'
      return:
        type:
          - adaptivecards.StringProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.maxVersion
    name: maxVersion
    fullName: maxVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'maxVersion: Version'
      return:
        type:
          - adaptivecards.Version
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.minHeightProperty
    name: minHeightProperty
    fullName: minHeightProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static minHeightProperty: PixelSizeProperty'
      return:
        type:
          - adaptivecards.PixelSizeProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.minPixelHeight
    name: minPixelHeight
    fullName: minPixelHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'minPixelHeight?: number'
      return:
        type:
          - number
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onAnchorClicked
    name: onAnchorClicked
    fullName: onAnchorClicked
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: >-
        onAnchorClicked?: (element: CardElement, anchor: HTMLAnchorElement) =>
        boolean
      return:
        type:
          - '(element: CardElement, anchor: HTMLAnchorElement) => boolean'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onAnchorClicked
    name: onAnchorClicked
    fullName: onAnchorClicked
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: >-
        static onAnchorClicked?: (element: CardElement, anchor:
        HTMLAnchorElement) => boolean
      return:
        type:
          - '(element: CardElement, anchor: HTMLAnchorElement) => boolean'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onElementVisibilityChanged
    name: onElementVisibilityChanged
    fullName: onElementVisibilityChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'onElementVisibilityChanged?: (element: CardElement) => void'
      return:
        type:
          - '(element: CardElement) => void'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onElementVisibilityChanged
    name: onElementVisibilityChanged
    fullName: onElementVisibilityChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'static onElementVisibilityChanged?: (element: CardElement) => void'
      return:
        type:
          - '(element: CardElement) => void'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onExecuteAction
    name: onExecuteAction
    fullName: onExecuteAction
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'onExecuteAction?: (action: Action) => void'
      return:
        type:
          - '(action: Action) => void'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onExecuteAction
    name: onExecuteAction
    fullName: onExecuteAction
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'static onExecuteAction?: (action: Action) => void'
      return:
        type:
          - '(action: Action) => void'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onImageLoaded
    name: onImageLoaded
    fullName: onImageLoaded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'onImageLoaded?: (image: Image) => void'
      return:
        type:
          - '(image: Image) => void'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onImageLoaded
    name: onImageLoaded
    fullName: onImageLoaded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'static onImageLoaded?: (image: Image) => void'
      return:
        type:
          - '(image: Image) => void'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onInlineCardExpanded
    name: onInlineCardExpanded
    fullName: onInlineCardExpanded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: >-
        onInlineCardExpanded?: (action: ShowCardAction, isExpanded: boolean) =>
        void
      return:
        type:
          - '(action: ShowCardAction, isExpanded: boolean) => void'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onInlineCardExpanded
    name: onInlineCardExpanded
    fullName: onInlineCardExpanded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: >-
        static onInlineCardExpanded?: (action: ShowCardAction, isExpanded:
        boolean) => void
      return:
        type:
          - '(action: ShowCardAction, isExpanded: boolean) => void'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onInputValueChanged
    name: onInputValueChanged
    fullName: onInputValueChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'onInputValueChanged?: (input: Input) => void'
      return:
        type:
          - '(input: Input) => void'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onInputValueChanged
    name: onInputValueChanged
    fullName: onInputValueChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'static onInputValueChanged?: (input: Input) => void'
      return:
        type:
          - '(input: Input) => void'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onPreProcessPropertyValue
    name: onPreProcessPropertyValue
    fullName: onPreProcessPropertyValue
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: >-
        onPreProcessPropertyValue?: (sender: CardObject, property:
        PropertyDefinition, value: any) => any
      return:
        type:
          - >-
            (sender: CardObject, property: PropertyDefinition, value: any) =>
            any
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onProcessMarkdown
    name: onProcessMarkdown
    fullName: onProcessMarkdown
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: >-
        static onProcessMarkdown?: (text: string, result:
        IMarkdownProcessingResult) => void
      return:
        type:
          - '(text: string, result: IMarkdownProcessingResult) => void'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.onRegisterCustomProperties
    name: onRegisterCustomProperties
    fullName: onRegisterCustomProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: >-
        static onRegisterCustomProperties?: (sender: SerializableObject, schema:
        SerializableObjectSchema) => void
      return:
        type:
          - >-
            (sender: SerializableObject, schema: SerializableObjectSchema) =>
            void
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.padding
    name: padding
    fullName: padding
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: PaddingDefinition | undefined padding
      return:
        type:
          - adaptivecards.PaddingDefinition | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.parent
    name: parent
    fullName: parent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: CardElement | undefined parent
      return:
        type:
          - adaptivecards.CardElement | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.parse
    name: 'parse(any, SerializationContext)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function parse(source: any, context?: SerializationContext)'
      parameters:
        - id: source
          type:
            - any
          description: ''
        - id: context
          type:
            - adaptivecards.SerializationContext
          description: ''
          optional: true
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.preProcessPropertyValue
    name: 'preProcessPropertyValue(PropertyDefinition, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function preProcessPropertyValue(property: PropertyDefinition,
        propertyValue?: any)
      parameters:
        - id: property
          type:
            - adaptivecards.PropertyDefinition
          description: ''
        - id: propertyValue
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.processMarkdown
    name: processMarkdown
    fullName: processMarkdown
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static (text: string) => string processMarkdown'
      return:
        type:
          - '(text: string) => string'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.remove
    name: remove()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function remove()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.removeItem
    name: removeItem(CardElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeItem(item: CardElement)'
      parameters:
        - id: item
          type:
            - adaptivecards.CardElement
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.render
    name: render(HTMLElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function render(target?: HTMLElement)'
      parameters:
        - id: target
          type:
            - HTMLElement
          description: ''
          optional: true
      return:
        type:
          - HTMLElement | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.renderedElement
    name: renderedElement
    fullName: renderedElement
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: HTMLElement | undefined renderedElement
      return:
        type:
          - HTMLElement | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.requires
    name: requires
    fullName: requires
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: HostCapabilities requires
      return:
        type:
          - adaptivecards.HostCapabilities
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.requiresProperty
    name: requiresProperty
    fullName: requiresProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static requiresProperty: SerializableObjectProperty'
      return:
        type:
          - adaptivecards.SerializableObjectProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.resetDefaultValues
    name: resetDefaultValues()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resetDefaultValues()
      parameters: []
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.rtl
    name: rtl
    fullName: rtl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'rtl?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.rtlProperty
    name: rtlProperty
    fullName: rtlProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static rtlProperty: BoolProperty'
      return:
        type:
          - adaptivecards.BoolProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.schemaUrl
    name: schemaUrl
    fullName: schemaUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        static schemaUrl: "http://adaptivecards.io/schemas/adaptive-card.json" =
        "http://adaptivecards.io/schemas/adaptive-card.json"
      return:
        type:
          - '"http://adaptivecards.io/schemas/adaptive-card.json"'
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.selectAction
    name: selectAction
    fullName: selectAction
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Action | undefined selectAction
      return:
        type:
          - adaptivecards.Action | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.selectActionProperty
    name: selectActionProperty
    fullName: selectActionProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static selectActionProperty: ActionProperty'
      return:
        type:
          - adaptivecards.ActionProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.separator
    name: separator
    fullName: separator
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'separator: boolean'
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.separatorElement
    name: separatorElement
    fullName: separatorElement
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: HTMLElement | undefined separatorElement
      return:
        type:
          - HTMLElement | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.separatorProperty
    name: separatorProperty
    fullName: separatorProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static separatorProperty: BoolProperty'
      return:
        type:
          - adaptivecards.BoolProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.setCustomProperty
    name: 'setCustomProperty(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setCustomProperty(name: string, value: any)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: value
          type:
            - any
          description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.setParent
    name: setParent(CardObject | undefined)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setParent(value: CardObject | undefined)'
      parameters:
        - id: value
          type:
            - adaptivecards.CardObject | undefined
          description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.setShouldFallback
    name: setShouldFallback(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setShouldFallback(value: boolean)'
      parameters:
        - id: value
          type:
            - boolean
          description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.shouldFallback
    name: shouldFallback()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function shouldFallback()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.spacing
    name: spacing
    fullName: spacing
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'spacing: Spacing'
      return:
        type:
          - adaptivecards.Spacing
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.spacingProperty
    name: spacingProperty
    fullName: spacingProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static spacingProperty: EnumProperty<Spacing>'
      return:
        type:
          - adaptivecards.EnumProperty<adaptivecards.Spacing>
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.speak
    name: speak
    fullName: speak
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'speak?: string'
      return:
        type:
          - string
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.speakProperty
    name: speakProperty
    fullName: speakProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static speakProperty: StringProperty'
      return:
        type:
          - adaptivecards.StringProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.style
    name: style
    fullName: style
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string | undefined style
      return:
        type:
          - string | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.styleProperty
    name: styleProperty
    fullName: styleProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static styleProperty: ValueSetProperty'
      return:
        type:
          - adaptivecards.ValueSetProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.toJSON
    name: toJSON(BaseSerializationContext)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function toJSON(context?: BaseSerializationContext)'
      parameters:
        - id: context
          type:
            - adaptivecards.BaseSerializationContext
          description: ''
          optional: true
      return:
        type:
          - adaptivecards.PropertyBag | undefined
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.typeNameProperty
    name: typeNameProperty
    fullName: typeNameProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static typeNameProperty: StringProperty'
      return:
        type:
          - adaptivecards.StringProperty
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.updateLayout
    name: updateLayout(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateLayout(processChildren?: boolean)'
      parameters:
        - id: processChildren
          type:
            - boolean
          description: ''
          optional: true
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.validateProperties
    name: validateProperties()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function validateProperties()
      parameters: []
      return:
        type:
          - adaptivecards.ValidationResults
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.version
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'version: Version'
      return:
        type:
          - adaptivecards.Version
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.versionProperty
    name: versionProperty
    fullName: versionProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static versionProperty: CustomProperty<Version | undefined>'
      return:
        type:
          - adaptivecards.CustomProperty<adaptivecards.Version | undefined>
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.verticalContentAlignment
    name: verticalContentAlignment
    fullName: verticalContentAlignment
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'verticalContentAlignment: VerticalAlignment'
      return:
        type:
          - adaptivecards.VerticalAlignment
        description: ''
    package: adaptivecards
  - uid: adaptivecards.AdaptiveCard.verticalContentAlignmentProperty
    name: verticalContentAlignmentProperty
    fullName: verticalContentAlignmentProperty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static verticalContentAlignmentProperty: EnumProperty<VerticalAlignment>'
      return:
        type:
          - adaptivecards.EnumProperty<adaptivecards.VerticalAlignment>
        description: ''
    package: adaptivecards
references:
  - uid: adaptivecards.ContainerWithActions
    name: ContainerWithActions
    spec.typeScript:
      - name: ContainerWithActions
        fullName: ContainerWithActions
        uid: adaptivecards.ContainerWithActions
  - uid: adaptivecards.CardElementHeight
    name: CardElementHeight
    spec.typeScript:
      - name: CardElementHeight
        fullName: CardElementHeight
        uid: adaptivecards.CardElementHeight
  - uid: adaptivecards.HorizontalAlignment
    name: HorizontalAlignment
    spec.typeScript:
      - name: HorizontalAlignment
        fullName: HorizontalAlignment
        uid: adaptivecards.HorizontalAlignment
  - uid: adaptivecards.Version
    name: Version
    spec.typeScript:
      - name: Version
        fullName: Version
        uid: adaptivecards.Version
  - uid: adaptivecards.Spacing
    name: Spacing
    spec.typeScript:
      - name: Spacing
        fullName: Spacing
        uid: adaptivecards.Spacing
  - uid: adaptivecards.VerticalAlignment
    name: VerticalAlignment
    spec.typeScript:
      - name: VerticalAlignment
        fullName: VerticalAlignment
        uid: adaptivecards.VerticalAlignment
  - uid: adaptivecards.SerializableObjectProperty
    name: SerializableObjectProperty
    spec.typeScript:
      - name: SerializableObjectProperty
        fullName: SerializableObjectProperty
        uid: adaptivecards.SerializableObjectProperty
  - uid: adaptivecards.BoolProperty
    name: BoolProperty
    spec.typeScript:
      - name: BoolProperty
        fullName: BoolProperty
        uid: adaptivecards.BoolProperty
  - uid: adaptivecards.StringProperty
    name: StringProperty
    spec.typeScript:
      - name: StringProperty
        fullName: StringProperty
        uid: adaptivecards.StringProperty
  - uid: adaptivecards.ValueSetProperty
    name: ValueSetProperty
    spec.typeScript:
      - name: ValueSetProperty
        fullName: ValueSetProperty
        uid: adaptivecards.ValueSetProperty
  - uid: adaptivecards.EnumProperty<adaptivecards.HorizontalAlignment>
    name: HorizontalAlignment>
    spec.typeScript:
      - name: EnumProperty
        fullName: EnumProperty
        uid: adaptivecards.EnumProperty
      - name: <
        fullName: <
      - name: HorizontalAlignment
        fullName: HorizontalAlignment
        uid: adaptivecards.HorizontalAlignment
      - name: '>'
        fullName: '>'
  - uid: adaptivecards.PixelSizeProperty
    name: PixelSizeProperty
    spec.typeScript:
      - name: PixelSizeProperty
        fullName: PixelSizeProperty
        uid: adaptivecards.PixelSizeProperty
  - uid: adaptivecards.ActionProperty
    name: ActionProperty
    spec.typeScript:
      - name: ActionProperty
        fullName: ActionProperty
        uid: adaptivecards.ActionProperty
  - uid: adaptivecards.EnumProperty<adaptivecards.Spacing>
    name: Spacing>
    spec.typeScript:
      - name: EnumProperty
        fullName: EnumProperty
        uid: adaptivecards.EnumProperty
      - name: <
        fullName: <
      - name: Spacing
        fullName: Spacing
        uid: adaptivecards.Spacing
      - name: '>'
        fullName: '>'
  - uid: adaptivecards.CustomProperty<adaptivecards.Version | undefined>
    name: Version | undefined>
    spec.typeScript:
      - name: CustomProperty
        fullName: CustomProperty
        uid: adaptivecards.CustomProperty
      - name: <
        fullName: <
      - name: Version
        fullName: Version
        uid: adaptivecards.Version
      - name: ' | undefined>'
        fullName: ' | undefined>'
  - uid: adaptivecards.EnumProperty<adaptivecards.VerticalAlignment>
    name: VerticalAlignment>
    spec.typeScript:
      - name: EnumProperty
        fullName: EnumProperty
        uid: adaptivecards.EnumProperty
      - name: <
        fullName: <
      - name: VerticalAlignment
        fullName: VerticalAlignment
        uid: adaptivecards.VerticalAlignment
      - name: '>'
        fullName: '>'
  - uid: adaptivecards.BackgroundImage
    name: BackgroundImage
    spec.typeScript:
      - name: BackgroundImage
        fullName: BackgroundImage
        uid: adaptivecards.BackgroundImage
  - uid: adaptivecards.HostConfig
    name: HostConfig
    spec.typeScript:
      - name: HostConfig
        fullName: HostConfig
        uid: adaptivecards.HostConfig
  - uid: adaptivecards.PaddingDefinition | undefined
    name: PaddingDefinition | undefined
    spec.typeScript:
      - name: PaddingDefinition
        fullName: PaddingDefinition
        uid: adaptivecards.PaddingDefinition
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: adaptivecards.CardElement | undefined
    name: CardElement | undefined
    spec.typeScript:
      - name: CardElement
        fullName: CardElement
        uid: adaptivecards.CardElement
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: adaptivecards.HostCapabilities
    name: HostCapabilities
    spec.typeScript:
      - name: HostCapabilities
        fullName: HostCapabilities
        uid: adaptivecards.HostCapabilities
  - uid: adaptivecards.Action | undefined
    name: Action | undefined
    spec.typeScript:
      - name: Action
        fullName: Action
        uid: adaptivecards.Action
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: adaptivecards.Action
    name: Action
    spec.typeScript:
      - name: Action
        fullName: Action
        uid: adaptivecards.Action
  - uid: adaptivecards.CardElement
    name: CardElement
    spec.typeScript:
      - name: CardElement
        fullName: CardElement
        uid: adaptivecards.CardElement
  - uid: 'adaptivecards.Input[]'
    name: 'Input[]'
    spec.typeScript:
      - name: Input
        fullName: Input
        uid: adaptivecards.Input
      - name: '[]'
        fullName: '[]'
  - uid: adaptivecards.PaddingDefinition
    name: PaddingDefinition
    spec.typeScript:
      - name: PaddingDefinition
        fullName: PaddingDefinition
        uid: adaptivecards.PaddingDefinition
  - uid: adaptivecards.ContainerStyleDefinition
    name: ContainerStyleDefinition
    spec.typeScript:
      - name: ContainerStyleDefinition
        fullName: ContainerStyleDefinition
        uid: adaptivecards.ContainerStyleDefinition
  - uid: 'adaptivecards.ActionType[]'
    name: 'ActionType[]'
    spec.typeScript:
      - name: ActionType
        fullName: ActionType
        uid: adaptivecards.ActionType
      - name: '[]'
        fullName: '[]'
  - uid: adaptivecards.Container | undefined
    name: Container | undefined
    spec.typeScript:
      - name: Container
        fullName: Container
        uid: adaptivecards.Container
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'adaptivecards.IResourceInformation[]'
    name: 'IResourceInformation[]'
    spec.typeScript:
      - name: IResourceInformation
        fullName: IResourceInformation
        uid: adaptivecards.IResourceInformation
      - name: '[]'
        fullName: '[]'
  - uid: adaptivecards.CardObject
    name: CardObject
    spec.typeScript:
      - name: CardObject
        fullName: CardObject
        uid: adaptivecards.CardObject
  - uid: adaptivecards.SerializableObjectSchema
    name: SerializableObjectSchema
    spec.typeScript:
      - name: SerializableObjectSchema
        fullName: SerializableObjectSchema
        uid: adaptivecards.SerializableObjectSchema
  - uid: adaptivecards.PropertyDefinition
    name: PropertyDefinition
    spec.typeScript:
      - name: PropertyDefinition
        fullName: PropertyDefinition
        uid: adaptivecards.PropertyDefinition
  - uid: adaptivecards.ValidationResults
    name: ValidationResults
    spec.typeScript:
      - name: ValidationResults
        fullName: ValidationResults
        uid: adaptivecards.ValidationResults
  - uid: adaptivecards.SerializationContext
    name: SerializationContext
    spec.typeScript:
      - name: SerializationContext
        fullName: SerializationContext
        uid: adaptivecards.SerializationContext
  - uid: adaptivecards.CardObject | undefined
    name: CardObject | undefined
    spec.typeScript:
      - name: CardObject
        fullName: CardObject
        uid: adaptivecards.CardObject
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: adaptivecards.BaseSerializationContext
    name: BaseSerializationContext
    spec.typeScript:
      - name: BaseSerializationContext
        fullName: BaseSerializationContext
        uid: adaptivecards.BaseSerializationContext
  - uid: adaptivecards.PropertyBag | undefined
    name: PropertyBag | undefined
    spec.typeScript:
      - name: PropertyBag
        fullName: PropertyBag
        uid: adaptivecards.PropertyBag
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: adaptivecards.IMarkdownProcessingResult
    name: IMarkdownProcessingResult
    spec.typeScript:
      - name: IMarkdownProcessingResult
        fullName: IMarkdownProcessingResult
        uid: adaptivecards.IMarkdownProcessingResult

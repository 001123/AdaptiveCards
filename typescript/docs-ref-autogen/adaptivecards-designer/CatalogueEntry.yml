### YamlMime:UniversalReference
items:
  - uid: adaptivecards-designer.CatalogueEntry
    name: CatalogueEntry
    fullName: CatalogueEntry
    children:
      - adaptivecards-designer.CatalogueEntry.cardPayload
      - adaptivecards-designer.CatalogueEntry.cardPayloadDownloaded
      - adaptivecards-designer.CatalogueEntry.cardPayloadUrl
      - adaptivecards-designer.CatalogueEntry.constructor
      - adaptivecards-designer.CatalogueEntry.createEmptyCardEntry
      - adaptivecards-designer.CatalogueEntry.displayName
      - adaptivecards-designer.CatalogueEntry.download
      - adaptivecards-designer.CatalogueEntry.onDownloaded
      - adaptivecards-designer.CatalogueEntry.sampleData
      - adaptivecards-designer.CatalogueEntry.sampleDataDownloaded
      - adaptivecards-designer.CatalogueEntry.sampleDataUrl
    langs:
      - typeScript
    type: class
    summary: ''
    package: adaptivecards-designer
  - uid: adaptivecards-designer.CatalogueEntry.cardPayload
    name: cardPayload
    fullName: cardPayload
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string cardPayload
      return:
        type:
          - string
        description: ''
    package: adaptivecards-designer
  - uid: adaptivecards-designer.CatalogueEntry.cardPayloadDownloaded
    name: cardPayloadDownloaded
    fullName: cardPayloadDownloaded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean cardPayloadDownloaded
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards-designer
  - uid: adaptivecards-designer.CatalogueEntry.cardPayloadUrl
    name: cardPayloadUrl
    fullName: cardPayloadUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'cardPayloadUrl: string'
      return:
        type:
          - string
        description: ''
    package: adaptivecards-designer
  - uid: adaptivecards-designer.CatalogueEntry.constructor
    name: 'CatalogueEntry(string, string, string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new CatalogueEntry(displayName: string, cardPayloadUrl: string,
        sampleDataUrl?: string)
      parameters:
        - id: displayName
          type:
            - string
          description: ''
        - id: cardPayloadUrl
          type:
            - string
          description: ''
        - id: sampleDataUrl
          type:
            - string
          description: ''
          optional: true
    package: adaptivecards-designer
  - uid: adaptivecards-designer.CatalogueEntry.createEmptyCardEntry
    name: createEmptyCardEntry()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function createEmptyCardEntry()
      parameters: []
      return:
        type:
          - adaptivecards-designer.CatalogueEntry
        description: ''
    package: adaptivecards-designer
  - uid: adaptivecards-designer.CatalogueEntry.displayName
    name: displayName
    fullName: displayName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'displayName: string'
      return:
        type:
          - string
        description: ''
    package: adaptivecards-designer
  - uid: adaptivecards-designer.CatalogueEntry.download
    name: download()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function download()
      parameters: []
    package: adaptivecards-designer
  - uid: adaptivecards-designer.CatalogueEntry.onDownloaded
    name: onDownloaded
    fullName: onDownloaded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onDownloaded: (sender: CatalogueEntry) => void'
      return:
        type:
          - '(sender: CatalogueEntry) => void'
        description: ''
    package: adaptivecards-designer
  - uid: adaptivecards-designer.CatalogueEntry.sampleData
    name: sampleData
    fullName: sampleData
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string sampleData
      return:
        type:
          - string
        description: ''
    package: adaptivecards-designer
  - uid: adaptivecards-designer.CatalogueEntry.sampleDataDownloaded
    name: sampleDataDownloaded
    fullName: sampleDataDownloaded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean sampleDataDownloaded
      return:
        type:
          - boolean
        description: ''
    package: adaptivecards-designer
  - uid: adaptivecards-designer.CatalogueEntry.sampleDataUrl
    name: sampleDataUrl
    fullName: sampleDataUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'sampleDataUrl?: string'
      return:
        type:
          - string
        description: ''
    package: adaptivecards-designer
references:
  - uid: adaptivecards-designer.CatalogueEntry
    name: CatalogueEntry
    spec.typeScript:
      - name: CatalogueEntry
        fullName: CatalogueEntry
        uid: adaptivecards-designer.CatalogueEntry
